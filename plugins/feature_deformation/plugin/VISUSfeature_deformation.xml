<ServerManagerConfiguration>
    <ProxyGroup name="filters">
        <!--

        Curvature.

        Compute streamline curvature and torsion for every grid node.

        -->
        <SourceProxy name="Curvature" class="curvature" label="Curvature">
            <Documentation>
                Compute streamline curvature and torsion for every grid node.
            </Documentation>

            <InputProperty name="Input" label="Vector field" command="SetInputConnection" port_index="0">
                <ProxyGroupDomain name="groups">
                    <Group name="sources"/>
                    <Group name="filters"/>
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkStructuredGrid"/>
                </DataTypeDomain>
                <InputArrayDomain attribute_type="point" name="vector_array" number_of_components="3"/>
                <InputArrayDomain attribute_type="point" name="jacobian_array" number_of_components="9" optional="1"/>
                <Documentation>
                    Grid containing the vector field for which curvature and torsion is computed.
                </Documentation>
            </InputProperty>

            <StringVectorProperty name="Vectors" label="Vectors" command="SetInputArrayToProcess" number_of_elements="5" element_types="0 0 0 0 2" animateable="0" default_values="0">
                <ArrayListDomain name="array_list" attribute_type="Vectors" input_domain_name="vector_array">
                    <RequiredProperties>
                        <Property name="Input" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>
                    Vector field for which curvature and torsion is computed.
                </Documentation>
            </StringVectorProperty>
            <StringVectorProperty name="Jacobian" label="Jacobian" command="SetInputArrayToProcess" number_of_elements="5" element_types="0 0 0 0 2" animateable="0" default_values="1">
                <ArrayListDomain name="array_list" attribute_type="Vectors" input_domain_name="jacobian_array" none_string="None">
                    <RequiredProperties>
                        <Property name="Input" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Hints>
                    <NoDefault />
                </Hints>
                <Documentation>
                    Jacobians of the deformation.
                </Documentation>
            </StringVectorProperty>

            <Hints>
                <ShowInMenu category="VISUS Feature Deformation"/>
            </Hints>
        </SourceProxy>

        <!--

        Feature Deformation.

        Deform a feature and its surrounding space.

        -->
        <SourceProxy name="Feature Deformation" class="feature_deformation" label="Feature Deformation">
            <Documentation>
                Deform a feature and its surrounding space.
            </Documentation>

            <InputProperty name="Input" label="Feature" command="SetInputConnection" port_index="1">
                <ProxyGroupDomain name="groups">
                    <Group name="sources"/>
                    <Group name="filters"/>
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkPolyData"/>
                </DataTypeDomain>
                <Documentation>
                    Feature line that is straightened and used as reference for the space deformation.
                </Documentation>
            </InputProperty>
            <InputProperty name="Grid" command="SetInputConnection" clean_command="RemoveAllInputs" port_index="0">
                <ProxyGroupDomain name="groups">
                    <Group name="sources"/>
                    <Group name="filters"/>
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkImageData"/>
                </DataTypeDomain>
                <Documentation>
                    The underlying grid that is deformed.
                </Documentation>
            </InputProperty>
            <InputProperty name="Geometry" command="AddInputConnection" clean_command="RemoveAllGeometryInputs" multiple_input="1" port_index="2">
                <ProxyGroupDomain name="groups">
                    <Group name="sources"/>
                    <Group name="filters"/>
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkPointSet"/>
                </DataTypeDomain>
                <Documentation>
                    Additional geometry that is deformed.
                </Documentation>
            </InputProperty>

            <IntVectorProperty name="LineID" label="Line ID" command="SetLineID" number_of_elements="1" default_values="0">
                <Documentation>
                    ID of the feature line that is straightened. All other provided lines are deformed accordingly.
                </Documentation>
            </IntVectorProperty>
            <StringVectorProperty name="SelectInputVectors" label="Vectors" command="SetInputArrayToProcess" number_of_elements="5" element_types="0 0 0 0 2" animateable="0">
                <ArrayListDomain name="array_list" attribute_type="Vectors" input_domain_name="inputs_array">
                    <RequiredProperties>
                        <Property name="Grid" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>
                    Input velocity field that is adjusted for the deformed grid.
                </Documentation>
            </StringVectorProperty>

            <IntVectorProperty name="Method" command="SetMethod" label="Method" number_of_elements="1" default_values="1">
                <EnumerationDomain name="enum">
                    <Entry value="0" text="Direct displacement"/>
                    <Entry value="1" text="Iterative smoothing"/>
                    <Entry value="2" text="Time-local (z-plane-wise)"/>
                </EnumerationDomain>
                <Documentation>
                    Method for straightening the feature line.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="Variant" label="Variant" command="SetVariant" number_of_elements="1" default_values="1">
                <EnumerationDomain name="enum">
                    <Entry value="0" text="Fix endpoints"/>
                    <Entry value="1" text="Growing"/>
                </EnumerationDomain>
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="or">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="0" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Variant for treating the endpoints of the feature line, where growing means that the endpoints are fixed only when the distance between them is decreasing.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="MaxNumIterations" label="Number of iterations" command="SetMaxNumIterations" number_of_elements="1" default_values="1000">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                </Hints>
                <Documentation>
                    Number of smoothing iterations.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="Lambda" label="Smoothing factor" command="SetLambda" number_of_elements="1" default_values="20.0">
                <DoubleRangeDomain name="lambda_range" min="0.00001" max="100.0" />
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                </Hints>
                <Documentation>
                    Smoothing factor, where 0 means no smoothing, and higher values increase smoothing, but also error.
                </Documentation>
            </DoubleVectorProperty>

            <IntVectorProperty name="Interpolator" label="Interpolator" command="SetInterpolator" number_of_elements="1" default_values="2">
                <EnumerationDomain name="enum">
                    <Entry value="0" text="Linear"/>
                    <Entry value="1" text="Exponential"/>
                    <Entry value="2" text="Quadratic (configurable exponent)"/>
                    <Entry value="3" text="First linear, then exponential"/>
                </EnumerationDomain>
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                </Hints>
                <Documentation>
                    Mapping of real time onto the smoothing iteration step. As the smoothing has a larger effect in the beginning and a very low effect in the end, exponential mapping can be used.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="InterpolatorThreshold" label="Threshold linear to exponential" command="SetInterpolatorThreshold" number_of_elements="1" default_values="0.9">
                <DoubleRangeDomain name="time_range" min="0.0" max="1.0" />
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="and">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Interpolator" value="3" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Time in [0,1] at which the interpolator switches from linear to exponential interpolation.
                </Documentation>
            </DoubleVectorProperty>
            <DoubleVectorProperty name="Exponent" label="Exponent" command="SetExponent" number_of_elements="1" default_values="2.0">
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="and">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Interpolator" value="2" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Exponent for the quadratic/cubic/... interpolator.
                </Documentation>
            </DoubleVectorProperty>
            <IntVectorProperty name="Duration" label="Duration (s)" command="SetDuration" number_of_elements="1" default_values="5">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                </Hints>
                <Documentation>
                    Duration of the animation when triggered using the python script. Does not have any effect otherwise.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="InterpolateSmoothingFactor" label="Interpolate smoothing factor" command="SetInterpolateSmoothingFactor" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                </Hints>
                <Documentation>
                    Linearly interpolate the smoothing factor for smaller steps in the beginning.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="Inverse" label="Inverse" command="SetInverse" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                </Hints>
                <Documentation>
                    Invert animation playback.
                </Documentation>
            </IntVectorProperty>

            <IntVectorProperty name="Weight" command="SetWeight" label="Weight" number_of_elements="1" default_values="4">
                <EnumerationDomain name="enum">
                    <Entry value="0" text="Greedy"/>
                    <Entry value="5" text="Greedy Joints"/>
                    <Entry value="1" text="Voronoi"/>
                    <Entry value="2" text="Projection"/>
                    <Entry value="3" text="B-Spline"/>
                    <Entry value="4" text="B-Spline Joints"/>
                </EnumerationDomain>
                <Documentation>
                    Method used for deforming the space around the feature line. **Greedy:** Inverse distance weighting to all feature line points. **Greedy Joints:** Like "greedy", but additionally include rotation. **Voronoi:** Inverse distance weighting to closest feature line point and its neighbors. **Projection:** Find closest point on the feature line and linear interpolate between the adjacent line points, using Gauss function for decreased influence with distance. **B-Spline:** Use feature line points as de Boor points and find closest point on the B-spline for interpolation, using Gauss function for decreased influence with distance. **B-Spline Joints:** Like "B-spline", but additionally include rotation.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="EpsilonScalar" label="Inverse distance weighting exponent" command="SetEpsilonScalar" number_of_elements="1" default_values="5.0">
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="or">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="0" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="1" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="5" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Exponent for the inverse distance weighting.
                </Documentation>
            </DoubleVectorProperty>
            <IntVectorProperty name="VoronoiDistance" label="Voronoi distance" command="SetVoronoiDistance" number_of_elements="1" default_values="1">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="1" />
                </Hints>
                <Documentation>
                    Number of neighbors to closest feature line point included for inverse distance weighting.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="SplineDegree" label="B-Spline degree" command="SetSplineDegree" number_of_elements="1" default_values="3">
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="or">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="3" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="4" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Degree of the B-spline.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="GaussParameter" label="Gauss kernel parameter" command="SetGaussParameter" number_of_elements="1" default_values="0.1">
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="and">
                            <Expression type="or">
                                <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="2" />
                                <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="3" />
                                <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="4" />
                            </Expression>
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="ComputeGauss" value="0" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Parameter for the Gauss function, defining the region of influence. Large values lead to local deformation, smaller values increase the region of deformation. A value of 0 means infinite region, as if no Gauss function was applied.
                </Documentation>
            </DoubleVectorProperty>
            <IntVectorProperty name="Subdivisions" label="Number of subdivisions" command="SetSubdivisions" number_of_elements="1" default_values="10">
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="or">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="3" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Weight" value="4" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Number of iterations for binary search of the closest point on the B-spline.
                </Documentation>
            </IntVectorProperty>

            <IntVectorProperty name="ComputeGauss" label="Compute Gauss parameter epsilon" command="SetComputeGauss" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Documentation>
                    Compute Gauss parameter instead of setting it manually. This is only possible if a grid was provided as input. The following options influence this computation, where the largest possible Gauss parameter should be found.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="CheckHandedness" label="Check handedness" command="SetCheckHandedness" number_of_elements="1" default_values="1">
                <BooleanDomain name="bool"/>
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="ComputeGauss" value="1" />
                </Hints>
                <Documentation>
                    Only right-handed cells are allowed, preventing self-penetration of cells.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="CheckConvexity" label="Check convexity" command="SetCheckConvexity" number_of_elements="1" default_values="1">
                <BooleanDomain name="bool"/>
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="and">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="ComputeGauss" value="1" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="CheckHandedness" value="1" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Only convex cells are allowed.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="CheckVolume" label="Check volume" command="SetCheckVolume" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="and">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="ComputeGauss" value="1" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="CheckHandedness" value="1" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="CheckConvexity" value="1" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Check area (in 2D) or volume (in 3D) of the cells and require them to be sufficiently large.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="VolumePercentage" label="Volume percentage" command="SetVolumePercentage" number_of_elements="1" default_values="0.2">
                <DoubleRangeDomain name="volume_range" min="0.0" max="1.0" />
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="and">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="ComputeGauss" value="1" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="CheckHandedness" value="1" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="CheckConvexity" value="1" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="CheckVolume" value="1" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Minimum area (in 2D) or volume (in 3D) necessary, compared to the original cell size.
                </Documentation>
            </DoubleVectorProperty>
            <IntVectorProperty name="GaussSubdivisions" label="Number of subdivisions" command="SetGaussSubdivisions" number_of_elements="1" default_values="10">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="ComputeGauss" value="1" />
                </Hints>
                <Documentation>
                    Number of iterations of binary search to find an adequate Gauss parameter. If no parameter was found that meets the previously set requirements, the parameter is set to zero.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="ComputeTearing" label="Identify tearing regions" command="SetComputeTearing" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Documentation>
                    Pre-compute tearing regions, by marking points of removed cells in the last time step.
                </Documentation>
            </IntVectorProperty>

            <IntVectorProperty name="AssessMapping" label="Assess b-spline mapping" command="SetAssessMapping" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Documentation>
                    Calculate mapping of displaced positions to displaced B-spline for assessment of the deformation process. Results are stored in "Displacement Information" (0: mapping, 1: absolute difference to mapping of undeformed positions to original B-spline)
                </Documentation>
            </IntVectorProperty>

            <IntVectorProperty name="OutputBSplineDistance" label="Output B-spline distance" command="SetOutputBSplineDistance" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Documentation>
                    Compute and output distance of neighboring points mapped onto the B-spline. This is only valid for line input.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="OutputDeformedGrid" label="Output deformed grid" command="SetOutputDeformedGrid" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Documentation>
                    Output the deformed grid.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="OutputVectorField" label="Output vector field" command="SetOutputVectorField" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="OutputDeformedGrid" value="1" />
                </Hints>
                <Documentation>
                    Output adjusted vector field as attribute of the deformed grid.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="RemoveCells" label="Remove elongated cells" command="SetRemoveCells" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="OutputDeformedGrid" value="1" />
                </Hints>
                <Documentation>
                    Remove cells that are too large and therefore unreliable for computations.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="RemoveCellsScalar" label="Scalar determining cell removal" command="SetRemoveCellsScalar" number_of_elements="1" default_values="2.0">
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="and">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="OutputDeformedGrid" value="1" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="RemoveCells" value="1" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Factor determining the threshold for cell removal. E.g., a value of two means that cells are discared whose edge length exceeds two times the original cell's diagonal.
                </Documentation>
            </DoubleVectorProperty>

            <StringVectorProperty name="ParameterLog" label="File name for parameter log" command="SetParameterLog" number_of_elements="1" default_values="parameters.log">
                <FileListDomain name="files"/>
                <Documentation>
                    Choose file destination for logging the parameters used for computation.
                </Documentation>
            </StringVectorProperty>
            <StringVectorProperty name="PerformanceLog" label="File name for performance log" command="SetPerformanceLog" number_of_elements="1" default_values="performance.csv">
                <FileListDomain name="files"/>
                <Documentation>
                    Choose file destination for logging performance.
                </Documentation>
            </StringVectorProperty>
            <IntVectorProperty name="Quiet" label="No information output" command="SetQuiet" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Documentation>
                    Restrict console output to error messages, if checked.
                </Documentation>
            </IntVectorProperty>

            <DoubleVectorProperty information_only="1" name="TimestepValues" repeatable="1">
                <TimeStepsInformationHelper />
            </DoubleVectorProperty>

            <PropertyGroup label="Smoothing">
                <Property name="Method" />
                <Property name="Variant" />
                <Property name="MaxNumIterations" />
                <Property name="Lambda" />
            </PropertyGroup>

            <PropertyGroup label="Animation">
                <Property name="Interpolator" />
                <Property name="InterpolatorThreshold" />
                <Property name="Exponent" />
                <Property name="Duration" />
                <Property name="InterpolateSmoothingFactor" />
                <Property name="Inverse" />

                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                </Hints>
            </PropertyGroup>

            <PropertyGroup label="Deformation">
                <Property name="Weight" />
                <Property name="EpsilonScalar" />
                <Property name="VoronoiDistance" />
                <Property name="SplineDegree" />
                <Property name="GaussParameter" />
                <Property name="Subdivisions" />
            </PropertyGroup>

            <PropertyGroup label="Pre-computation">
                <Property name="ComputeGauss" />
                <Property name="CheckHandedness" />
                <Property name="CheckConvexity" />
                <Property name="CheckVolume" />
                <Property name="VolumePercentage" />
                <Property name="GaussSubdivisions" />
                <Property name="ComputeTearing" />
            </PropertyGroup>

            <PropertyGroup label="Assessment">
                <Property name="AssessMapping" />
            </PropertyGroup>

            <PropertyGroup label="Output">
                <Property name="OutputBSplineDistance" />
                <Property name="OutputDeformedGrid" />
                <Property name="OutputVectorField" />
                <Property name="RemoveCells" />
                <Property name="RemoveCellsScalar" />
            </PropertyGroup>

            <PropertyGroup label="Logging">
                <Property name="ParameterLog" />
                <Property name="PerformanceLog" />
                <Property name="Quiet" />
            </PropertyGroup>

            <OutputPort name="Deformed Features" index="0" id="lines">
                <Documentation>
                    Straightened feature line and correspondingly deformed lines.
                </Documentation>
            </OutputPort>
            <OutputPort name="Deformed Geometry" index="1" id="geometry">
                <Documentation>
                    Deformed geometry, only translating the points, leaving the cells as they are.
                </Documentation>
            </OutputPort>
            <OutputPort name="Deformed Grid" index="2" id="grid">
                <Documentation>
                    Deformed grid.
                </Documentation>
            </OutputPort>

            <Hints>
                <ShowInMenu category="VISUS Feature Deformation"/>
            </Hints>
        </SourceProxy>

        
        <!--

        Fix Curvature Gradient.

        Adjusts deformed grid in a way such that the curvature gradient different is minimized.

        -->
        <SourceProxy name="Fix Curvature Gradient" class="fix_curvature_gradient" label="Fix Curvature Gradient">
            <Documentation>
                Adjusts deformed grid in a way such that the curvature gradient different is minimized.
            </Documentation>

            <InputProperty name="Input" label="Input" command="SetInputConnection" port_index="0">
                <ProxyGroupDomain name="groups">
                    <Group name="sources"/>
                    <Group name="filters"/>
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkImageData"/>
                </DataTypeDomain>
                <InputArrayDomain attribute_type="point" name="vector_original_array" number_of_components="3"/>
                <InputArrayDomain attribute_type="point" name="vector_deformed_array" number_of_components="3"/>
                <Documentation>
                    Grid containing original and deformed vector field.
                </Documentation>
            </InputProperty>

            <StringVectorProperty name="OriginalVectors" label="Original vector field" command="SetInputArrayToProcess" number_of_elements="5" element_types="0 0 0 0 2" animateable="0" default_values="0">
                <ArrayListDomain name="array_list" attribute_type="Vectors" input_domain_name="vector_original_array">
                    <RequiredProperties>
                        <Property name="Input" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>
                    Original vector field for which curvature and torsion is computed.
                </Documentation>
            </StringVectorProperty>
            <StringVectorProperty name="DeformedVectors" label="Deformed vector field" command="SetInputArrayToProcess" number_of_elements="5" element_types="0 0 0 0 2" animateable="0" default_values="1">
                <ArrayListDomain name="array_list" attribute_type="Vectors" input_domain_name="vector_deformed_array">
                    <RequiredProperties>
                        <Property name="Input" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>
                    Deformed vector field for which curvature and torsion is computed.
                </Documentation>
            </StringVectorProperty>

            <IntVectorProperty name="NumSteps" label="Number of steps" command="SetNumSteps" number_of_elements="1" default_values="10">
                <Documentation>
                    Maximum number of iterations.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="StepSize" label="Step size" command="SetStepSize" number_of_elements="1" default_values="0.1">
                <Documentation>
                    Step size for each iteration.
                </Documentation>
            </DoubleVectorProperty>
            <DoubleVectorProperty name="Error" label="Error threshold" command="SetError" number_of_elements="1" default_values="1e-6">
                <Documentation>
                    Error threshold to determine convergence.
                </Documentation>
            </DoubleVectorProperty>
            <IntVectorProperty name="DynamicStep" label="Dynamic step" command="SetDynamicStep" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Documentation>
                    Calculate maximum step size to which the user-defined step size is relative to.
                </Documentation>
            </IntVectorProperty>

            <Hints>
                <ShowInMenu category="VISUS Feature Deformation"/>
            </Hints>
        </SourceProxy>

        <!--

        Optimizer.

        Adjusts deformed grid in a way such that the gradient different is minimized.

        -->
        <SourceProxy name="Optimizer" class="optimizer" label="Optimizer">
            <Documentation>
                Adjusts deformed grid in a way such that the gradient different is minimized.
            </Documentation>

            <InputProperty name="Input" label="Original" command="SetInputConnection" port_index="0">
                <ProxyGroupDomain name="groups">
                    <Group name="sources"/>
                    <Group name="filters"/>
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkStructuredGrid"/>
                </DataTypeDomain>
                <InputArrayDomain attribute_type="point" name="vector_original_array" number_of_components="3"/>
                <Documentation>
                    Original grid containing gradient information.
                </Documentation>
            </InputProperty>
            <InputProperty name="Deformed" label="Deformed" command="SetInputConnection" port_index="1">
                <ProxyGroupDomain name="groups">
                    <Group name="sources"/>
                    <Group name="filters"/>
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkStructuredGrid"/>
                </DataTypeDomain>
                <Documentation>
                    Deformed grid containing gradient information and information about deformation.
                </Documentation>
            </InputProperty>

            <StringVectorProperty name="OriginalVectors" label="Vector field" command="SetInputArrayToProcess" number_of_elements="5" element_types="0 0 0 0 2" animateable="0" default_values="0">
                <ArrayListDomain name="array_list" attribute_type="Vectors" input_domain_name="vector_original_array">
                    <RequiredProperties>
                        <Property name="Input" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>
                    Vector field for which curvature and torsion is computed.
                </Documentation>
            </StringVectorProperty>
            <IntVectorProperty name="ErrorDefinition" label="Error definition" command="SetErrorDefinition" number_of_elements="1" default_values="0">
                <EnumerationDomain name="enum">
                    <Entry value="0" text="Vector difference"/>
                    <Entry value="1" text="Angle"/>
                    <Entry value="2" text="Length difference"/>
                </EnumerationDomain>
                <Hints>
                    <PropertyWidgetDecorator type="CompositeDecorator">
                        <Expression type="or">
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="0" />
                            <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="Method" value="1" />
                        </Expression>
                    </PropertyWidgetDecorator>
                </Hints>
                <Documentation>
                    Definition for calculating the error.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="Method" label="Method" command="SetMethod" number_of_elements="1" default_values="2">
                <EnumerationDomain name="enum">
                    <Entry value="0" text="Gradient descent"/>
                    <Entry value="1" text="Nonlinear conjugate gradient"/>
                    <Entry value="2" text="Finite differences"/>
                </EnumerationDomain>
                <Documentation>
                    Method for calculating the descent direction.
                </Documentation>
            </IntVectorProperty>
            
            <IntVectorProperty name="NumSteps" label="Number of steps" command="SetNumSteps" number_of_elements="1" default_values="10">
                <Documentation>
                    Maximum number of iterations.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="StepSize" label="Step size" command="SetStepSize" number_of_elements="1" default_values="0.1">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="StepSizeControl" value="1" />
                </Hints>
                <Documentation>
                    Step size for each iteration.
                </Documentation>
            </DoubleVectorProperty>
            <IntVectorProperty name="StepSizeMethod" label="Step size method" command="SetStepSizeMethod" number_of_elements="1" default_values="1">
                <EnumerationDomain name="enum">
                    <Entry value="0" text="Normalized"/>
                    <Entry value="1" text="Gradient norm"/>
                    <Entry value="2" text="Local error"/>
                </EnumerationDomain>
                <Documentation>
                    Method of calculating the step size.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="StepSizeControl" label="Step size control" command="SetStepSizeControl" number_of_elements="1" default_values="0">
                <EnumerationDomain name="enum">
                    <Entry value="0" text="Dynamic"/>
                    <Entry value="1" text="Fixed"/>
                </EnumerationDomain>
                <Documentation>
                    Dynamically adjust step size or keep it static.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="Error" label="Error threshold" command="SetError" number_of_elements="1" default_values="1e-6">
                <Documentation>
                    Error threshold to determine convergence.
                </Documentation>
            </DoubleVectorProperty>

            <DoubleVectorProperty name="StepSizeMin" label="Minimum step size" command="SetStepSizeMin" number_of_elements="1" default_values="1e-10">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="StepSizeControl" value="0" />
                </Hints>
                <Documentation>
                    Minimum step size for dynamic step size control using line search.
                </Documentation>
            </DoubleVectorProperty>
            <DoubleVectorProperty name="StepSizeMax" label="Maximum step size" command="SetStepSizeMax" number_of_elements="1" default_values="1e2">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="StepSizeControl" value="0" />
                </Hints>
                <Documentation>
                    Maximum step size for dynamic step size control using line search.
                </Documentation>
            </DoubleVectorProperty>
            <IntVectorProperty name="LineSearchSteps" label="Number of line search steps" command="SetLineSearchSteps" number_of_elements="1" default_values="6">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="StepSizeControl" value="0" />
                </Hints>
                <Documentation>
                    Number of line search steps used for determining the dynamic step size.
                </Documentation>
            </IntVectorProperty>

            <IntVectorProperty name="GradientMethod" label="Gradient method" command="SetGradientMethod" number_of_elements="1" default_values="1" panel_visibility="advanced">
                <EnumerationDomain name="enum">
                    <Entry value="0" text="Differences"/>
                    <Entry value="1" text="Least squares"/>
                </EnumerationDomain>
                <Documentation>
                    Method for (smooth) gradient computation.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="GradientKernel" label="Gradient kernel" command="SetGradientKernel" number_of_elements="1" default_values="1" panel_visibility="advanced">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="GradientMethod" value="1" />
                </Hints>
                <Documentation>
                    Kernel size for (smooth) gradient computation.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="GradientStep" label="Step size for gradient calculation" command="SetGradientStep" number_of_elements="1" default_values="1e-6" panel_visibility="advanced">
                <Documentation>
                    Step size h for gradient calculation.
                </Documentation>
            </DoubleVectorProperty>
            <IntVectorProperty name="CheckWolfe" label="Check Wolfe conditions" command="SetCheckWolfe" number_of_elements="1" default_values="0" panel_visibility="advanced">
                <BooleanDomain name="bool"/>
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="StepSizeControl" value="0" />
                </Hints>
                <Documentation>
                    Check Wolfe conditions for step sizes (outputs information only, no filtering).
                </Documentation>
            </IntVectorProperty>

            <IntVectorProperty name="CSVOutput" label="Output CSV" command="SetCSVOutput" number_of_elements="1" default_values="0" panel_visibility="advanced">
                <BooleanDomain name="bool"/>
                <Documentation>
                    Output error information in CSV format to stdout (general information) and stderr (all errors).
                </Documentation>
            </IntVectorProperty>

            <PropertyGroup label="Input">
                <Property name="OriginalVectors" />
                <Property name="ErrorDefinition" />
                <Property name="Method" />
            </PropertyGroup>

            <PropertyGroup label="Step size">
                <Property name="NumSteps" />
                <Property name="StepSize" />
                <Property name="StepSizeMethod" />
                <Property name="StepSizeControl" />
                <Property name="Error" />
            </PropertyGroup>

            <PropertyGroup label="Dynamic step size control">
                <Property name="StepSizeMin" />
                <Property name="StepSizeMax" />
                <Property name="LineSearchSteps" />
            </PropertyGroup>

            <PropertyGroup label="Advanced options">
                <Property name="GradientMethod" />
                <Property name="GradientKernel" />
                <Property name="GradientStep" />
                <Property name="CheckWolfe" />
            </PropertyGroup>

            <PropertyGroup label="Output">
                <Property name="CSVOutput" />
            </PropertyGroup>

            <Hints>
                <ShowInMenu category="VISUS Feature Deformation"/>
            </Hints>
        </SourceProxy>
    </ProxyGroup>
</ServerManagerConfiguration>
